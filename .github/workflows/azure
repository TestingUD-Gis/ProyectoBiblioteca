name: "Full CI/CD Pipeline - CodeQL + JUnit + Deploy to Azure"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # An치lisis programado (opcional)
    - cron: '0 * * * *'  # cada hora

env:
  AZURE_WEBAPP_NAME: 'Bibliotecadigital'
  POM_XML_DIRECTORY: 'biblioteca'
  JAVA_VERSION: '17'
  DISTRIBUTION: 'temurin'

jobs:
  # ---------- CODEQL SECURITY ANALYSIS ----------
  codeql:
    name: CodeQL Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Build for CodeQL
        run: |
          cd $GITHUB_WORKSPACE/${{ env.POM_XML_DIRECTORY }}
          mvn -B clean compile -DskipTests

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java"

  # ---------- JUNIT TESTS ----------
  test:
    name: Run JUnit Tests
    runs-on: ubuntu-latest
    needs: codeql  # s칩lo se ejecuta si CodeQL pas칩

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Run Maven Tests
        run: |
          cd $GITHUB_WORKSPACE/${{ env.POM_XML_DIRECTORY }}
          mvn -B clean test

      - name: Upload JUnit Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: ${{ env.POM_XML_DIRECTORY }}/target/surefire-reports/

  # ---------- DEPLOY TO AZURE ----------
  deploy:
    name: Build & Deploy to Azure WebApp
    runs-on: ubuntu-latest
    needs: test  # s칩lo se ejecuta si los tests pasan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build Package
        run: |
          cd ${{ env.POM_XML_DIRECTORY }}
          mvn -B clean package -DskipTests

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: '${{ env.POM_XML_DIRECTORY }}/target/*.jar'
